1.22---js八种继承方法
  1.原型链继承，每个构造函数都有个原型对象，原型对象有个指向构造函数的指针，实例也有个指向原型对象的指针
    继承就是复制，重写原型对象
    SubType.prototype = new SuperType();
    原型链方案存在的缺点：多个实例对引用类型的操作会被篡改。

  2.原型式继承
    利用一个空对象为中介，直接将某个对象赋值给空对象构造函数的原型
    function object(object){
      function  f(){}
      f.prototype = object
      return new f()
    }
    缺点：无法传递参数，属于浅复制，原型链继承多个实例的引用类型属性指向相同，存在篡改可能
    
  3.ES6-extends类继承
    一个类只能有一个构造函数，默认是constructor
    
  
    

1.深拷贝 https://juejin.im/post/5c45112e6fb9a04a027aa8fe
  浅拷贝加上对象判断递归
// 木易杨
function cloneShallow(source) {
    var target = {};
    if (!isObject(source)) return source; // 非对象返回自身
    for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
        }
    }
    return target;
}
// 木易杨
function cloneDeep2(source) {

    if (!isObject(source)) return source; // 非对象返回自身
      
    var target = Array.isArray(source) ? [] : {};
    for(var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
            if (isObject(source[key])) {
                target[key] = cloneDeep2(source[key]); // 注意这里
            } else {
                target[key] = source[key];
            }
        }
    }
    return target;
}

先判断是否为null typeof null/{}/[]/都是object
// 木易杨
function isObject(obj) {
	return typeof obj === 'object' && obj != null;
}

2.

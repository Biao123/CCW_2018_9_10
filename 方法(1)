1   字符串转json
    var jsonstr = '{"name":"fendouer", "age":23}'
        eval('(' + jsonstr + ')'); //可以将json字符串转换成json对象,注意需要在json字符外包裹一对小括号 
        JSON.parse(jsonstr); //可以将json字符串转换成json对象 
        JSON.stringify(jsonobj); //可以将json对象转换成json对符串
        $.parseJSON( jsonstr ); //jQuery.parseJSON(jsonstr),可以将json字符串转换成json对象
        
2   父组件调用子组件方法
    <drawEBook ref="children"></drawEBook>
    this.$refs.children.childrenMethod(row)  //可直接传递数据
    
    子组件调用父组件方法
    <button @click="submit">提交</button>
    submit(){
        this.$emit('fatherMethod',参数')
    }
    <editor id="editor" class="editor" @fatherMethod="fatherMethod"></editor>
    fatherMethod(){}

3   照片上传七牛云
    1：文件的base64格式
    var pic = this.imgBase64
    2：url七牛云带上putb4/和file的字节长度（要除掉data:image/jpeg;base64，使用this.imgBase64 = img_reader.result.split(',')[1]）
    var url = "https://upload.qiniup.com/putb64/" + this.imgLength;
    3：注意（获取七牛云的token加上key，"UpToken " + this.upToken.token需要加一个空格）
        var xhr = new XMLHttpRequest();
        var str
        xhr.onreadystatechange=function(){
          if (xhr.readyState==4){
            console.log(JSON.parse(xhr.response))
            this.imgUrl = QiNiu.QiNiuConfigUrl + JSON.parse(xhr.response).key
            console.log(this.imgUrl)
            sessionStorage.setItem('data',this.imgUrl)   //需要设置在本地缓存才能被全局去调用
          }
        }
        xhr.open("POST", url, true);
        xhr.setRequestHeader("Content-Type", "application/octet-stream");
        xhr.setRequestHeader("Authorization", "UpToken " + this.upToken.token);
        xhr.send(pic);
4   vue 刷新当前页面问题
    https://www.cnblogs.com/yinn/p/9056731.html
    采用全局注册 isShow
    provide(){
        return{
            this.reload
        }
    },
    data(){
        return{
            isShow:true
        }
    }
    reload(){
        this.isShow = false
        this.$nextTick(function(){
            this.isShow = true
        })
    }
    组件按需引用，注入inject:['reload']
    this.reload()直接调用
    

5   关于vuex的使用
    可以store下面创建一个index.js引入modules不同的按需调用js
    state储存值,mutations方法,aactios异步调用值通过this.$store.commit
    异步方法放在actioins里通过this.$store.dispatch调用
    mutations里的操作必须是同步的
    mutations 中的方法是不分组件的,调用某个方法会执行所有的方法
    this.$store.commit(''SET_ID',id)  调用mutations方法存储id值
    this.$store.dispatch('login').then(() =>{
    })
    state(){
        id:'',
    },
    mutations(){
        SET_ID: (state, id) => {
          state.id = id
        },
    },
    actions:{
        login(){}
    }
    通过$store.getters.not_show来改变某些值全局使用但是只是在某个节点需要使用
    import { mapState.mapGetters.mapActions } from 'vuex'
    computed:{
        ...mapState:{
            show:state=>state.dialog.show
        }
    }
    
    
6   apply(this,arguments)   call(this,arguments) 俩者都是调用一个对象的方法，继承另一个对象的属性，apply有一个特性，
arguments会先把数组参数转化为对象参数 ，这样可以解决一个数组push的方法，Array.prototype.push.apply(arr1,arr2)


7   VideoNo(){ // 复制音频编号
              const Url2 = document.getElementById('copyVideo');
              Url2.select(); // 选择对象
              document.execCommand('Copy'); // 执行浏览器复制
              this.$notify({
                title: '成功',
                message: '复制视频编号成功！！！',
                type: 'success',
              });
            },
            
8   父传值子组件 :name='hello',props:{name:String,required:true}

9   本地选取图片上传
            <el-button style='position: relative;'>
              选择图片
              <input class="imgFile" type="file" id="file" accept="image/png, image/jpeg, image/gif, image/jpg" @change="preview(this)">
            </el-button>   
            .imgFile{
              width: 100%;
              position: absolute;
              left: 0;
              z-index: 1;
              opacity: 0;
              top: 0;
              height: 100%;
            }
            // 选取图片
            preview(obj){
              let reads= new FileReader();
              let img = document.getElementById('file').files[0]
              let that = this
              reads.readAsDataURL(img);
              reads.onload=function (e) {
                console.log(this.result)
                that.pictureImg = this.result
              };
            },
            //配第三条上传
10
11

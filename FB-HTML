1语义化
样式未加载的时候能显示清晰的数据结构
方便其他设备解析渲染网页（屏幕阅读器，移动设备，盲人阅读器
有利于seo，有助于爬虫抓取更多有效信息，爬虫依赖于标签来确定上下文和关键字的比重
便于团队维护和开发，减少差异化

2doctype
（1） 。告知浏览器用何种标准渲染文档
（2）、严格模式的排版和 JS 运作模式是  以该浏览器支持的最高标准运行。
（3）、在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。
（4）、DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。   

3.xhtml和html
所有标记都需要一个相应的结束标记
所有xml标记必须合理嵌套
所有属性都需要“”覆盖
标签和属性必须小写
图片必须有说明文字

4.兼容性
浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。
Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示, 可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决.
超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:L-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}

5.消除浮动
给包含浮动元素的父标签添加css属性 overflow:auto; zoom:1; zoom:1用于兼容IE6。
在所有浮动标签后面添加一个空标签 定义css clear:both. 弊端就是增加了无意义标签。
加上clearfix
.clearfix:after{
    content:".";
    height:0;
    visibility:hidden;
    display:block;
    clear:both;
    }
    
6.H5
语义化更好的标签，header,footer,aside,section
音视频api，audio,video
画布canvas
地理geolocation
本地缓存localstorage长期储存，浏览器关闭后不清除数据
表单控件，calendar、date、time、email、url、search  
v新的技术webworker, websocket, Geolocation

移除
对可用性产生负面影响的元素：frame，frameset，noframes；
纯表现的元素：basefont，big，center，font, s，strike，tt，u

区分
DOCTYPE声明\新增的结构元素\功能元素

7.解决fouc文档样式闪烁
<head>之间加入一个<link>或者<script>元素就可以了

8.new操作符
创建一个空对象，并且this变量引用该对象，同时继承的原型
属性和方法加入到this引用的对象
新建的对象油this引用，并返回

9.document.write重写整个页面
innerHTML重绘页面的一部分

10.eval
将对应字符串解析成js代码运行
先解析成js语句再执行，耗性能，不安全

11.
https://blog.csdn.net/gujinapenggu5/article/details/58006684

12.css实现居中
    position，负边距，table-cell
    1.display:flex;align-items:center;justify-content:center;
    2.display:table-cell;text-align:center;vertival-align:middle;
    3.绝对定位和负边距，postion:absolutely;left:50%;top:50%;
    4.

13.1px问题
    伪元素和transform
    构建一个伪元素，border为1px，再transform缩放到五十
    /* 设计稿是750,采用1：100的比例,font-size为100*(100vw/750) */
    .border-1px {
        position: relative;
    }
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
        .border-1px:before {
            content: " ";
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 1px;
            border-top: 1px solid #D9D9D9;
            color: #D9D9D9;
            -webkit-transform-origin: 0 0;
            transform-origin: 0 0;
            -webkit-transform: scaleY(0.5);
            transform: scaleY(0.5);
        }
    }
    
    js计算rem基准值和viewport缩放值
       /* 设计稿是750,采用1：100的比例,font-size为100 * (docEl.clientWidth * dpr / 750) */
    var dpr, rem, scale;
    var docEl = document.documentElement;
    var fontEl = document.createElement('style');
    var metaEl = document.querySelector('meta[name="viewport"]');
    dpr = window.devicePixelRatio || 1;
    rem = 100 * (docEl.clientWidth * dpr / 750);
    scale = 1 / dpr;
    // 设置viewport，进行缩放，达到高清效果
    metaEl.setAttribute('content', 'width=' + dpr * docEl.clientWidth + ',initial-scale=' + scale + ',maximum-scale=' + scale + ', minimum-scale=' + scale + ',user-scalable=no');
    // 设置data-dpr属性，留作的css hack之用，解决图片模糊问题和1px细线问题
    docEl.setAttribute('data-dpr', dpr);
    // 动态写入样式
    docEl.firstElementChild.appendChild(fontEl);
    fontEl.innerHTML = 'html{font-size:' + rem + 'px!important;}'; 

13.去除所有空格: str = str.replace(/\s*/g,"");      
str.trimLeft()，str.trimRight()，$.trim(str)局限性：无法去除中间的空格

14.typeof(obj) === "string"
typeof obj === "string"
obj.constructor === String

15.获取url参数
http://www.runoob.com/jquery/misc-trim.html?channelid=12333&name=xiaoming&age=23
function showWindowHref(){
    var sHref = window.location.href;
    var args = sHref.split('?');
    if(args[0] == sHref){
        return "";
    }
    var arr = args[1].split('&');
    var obj = {};
    for(var i = 0;i< arr.length;i++){
        var arg = arr[i].split('=');
        obj[arg[0]] = arg[1];
    }
    return obj;
}
var href = showWindowHref(); // obj
console.log(href['name']); // xiaoming

16.this的使用
构造函数
function Animal(name, color) {
　　this.name = name;
　　this.color = color;
}
input取值
    var btn = document.getElementById("text");
    btn.onclick = function() {
        alert(this.value);    //此处的this是按钮元素
    }
html属性使用，<input type=”button” onclick=”showInfo(this);” value=”点击一下”/>
call/apply求值
var  numbers = [5, 458 , 120 , -215 ]; 
var  maxInNumbers = Math.max.apply(this, numbers);  
console.log(maxInNumbers);  // 458
var maxInNumbers = Math.max.call(this,5, 458 , 120 , -215); 
console.log(maxInNumbers);  // 458

17.
 Array,Null 等特殊对象使用 typeof 一律返回 object，这正是 typeof 的局限性。
typeof结果：undefined,boolean.string.function,number,object

18.
Web攻击技术


19.
正则

20.
document.ready:在文档加载完毕后触发事件
document.onload:在图片等资源加载后执行事件

21.cookie

22.js计算

23.
src是请求外部资源的位置，指向的内容会潜入到标签所在的文档，
href是请求网络资源的位置
都会先下载资源再进行下一步

24.jq浏览器禁止前进后退
jQuery(document).ready(function () {
                  if (window.history && window.history.pushState) {
                      $(window).on('popstate', function () {
　　　　　　　　　　　　　　　　/// 当点击浏览器的 后退和前进按钮 时才会被触发， 
                          window.history.pushState('forward', null, ''); 
                          window.history.forward(1);
                      });
                  }
　　　　　　　　　　//
                  window.history.pushState('forward', null, '');  //在IE中必须得有这两行
                  window.history.forward(1);
              });

25.delegate（）
给父元素下的子元素添加事件
$("ul").delegate("li", "click", function(){ $(this).hide(); });

26.移除标签事件
获得a标签的onclick属性: $("a").attr("onclick")

删除onclick属性：$("a").removeAttr("onclick");

设置onclick属性：$("a").attr("onclick","test();");

27.跨域，垃圾回收

28.三角形
    width: 0;
    height: 0;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
    border-top: 50px solid transparent;
    border-bottom: 50px solid blue;
    background: white;

29.link @import
link是页面载入时同时加载，后者是在页面加载完毕后加载
link是xhtml标签可以加载除了css资源外，后者只能加载css
link无兼容问题，后者支持css2.1后的
link支持js改变dom

30.js数组去重
var b = [... new Set(arr)]
[... new Set([arr1,arr2])].sort(a,b) =>{return a-b}


31.navigator
appName
appVersion
appCodeName
cpuName
cookieEnable
systemLanguage











